<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.devbrackets.android.exomediademo"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="14"
        android:targetSdkVersion="25" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <application
        android:name="com.devbrackets.android.exomediademo.App"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity
            android:name="com.devbrackets.android.exomediademo.ui.activity.StartupActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.devbrackets.android.exomediademo.ui.activity.VideoPlayerActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:label="@string/title_activity_video_player" >
        </activity>
        <activity
            android:name="com.devbrackets.android.exomediademo.ui.activity.FullScreenVideoPlayerActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:label="@string/title_activity_video_player" >
        </activity>
        <activity
            android:name="com.devbrackets.android.exomediademo.ui.activity.VideoSelectionActivity"
            android:label="@string/title_activity_video_player" >
        </activity>
        <activity
            android:name="com.devbrackets.android.exomediademo.ui.activity.AudioSelectionActivity"
            android:label="@string/title_activity_audio_player" >
        </activity>
        <activity
            android:name="com.devbrackets.android.exomediademo.ui.activity.AudioPlayerActivity"
            android:label="@string/title_activity_audio_player" >
        </activity>

        <service
            android:name="com.devbrackets.android.exomediademo.service.MediaService"
            android:enabled="true"
            android:exported="false" >
        </service>

        <receiver
            android:name="com.devbrackets.android.playlistcore.receiver.MediaControlsReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.squareup.leakcanary.internal.HeapAnalyzerService"
            android:enabled="false"
            android:process=":leakcanary" />
        <service
            android:name="com.squareup.leakcanary.DisplayLeakService"
            android:enabled="false" />

        <activity
            android:name="com.squareup.leakcanary.internal.DisplayLeakActivity"
            android:enabled="false"
            android:icon="@drawable/leak_canary_icon"
            android:label="@string/leak_canary_display_activity_label"
            android:taskAffinity="com.squareup.leakcanary"
            android:theme="@style/leak_canary_LeakCanary.Base" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.squareup.leakcanary.internal.RequestStoragePermissionActivity"
            android:enabled="false"
            android:icon="@drawable/leak_canary_icon"
            android:label="@string/leak_canary_storage_permission_activity_label"
            android:taskAffinity="com.squareup.leakcanary"
            android:theme="@style/leak_canary_Theme.Transparent" />
    </application>

</manifest>